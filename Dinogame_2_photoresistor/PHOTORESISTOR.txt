// this constant won't change:
const int  buttonPin = 2;    // the pin that the pushbutton is attached to
const int  buttonPin2 = 3;    // the pin that the pushbutton is attached to
const int ledPin = 13;       // the pin that the LED is attached to

// Variables will change:
int buttonPushCounter = 0;   // counter for the number of button presses
int buttonState = 0;         // current state of the button
int buttonState2 = 0;  
int lastButtonState = 0;     // previous state of the button
int lastButtonState2 = 0;   

void setup() {
  // initialize the button pin as a input:
  pinMode(buttonPin, INPUT);
  // initialize the LED as an output:
  pinMode(buttonPin2, INPUT);
  
  pinMode(ledPin, OUTPUT);
  // initialize serial communication:
  Serial.begin(9600);
}


void loop() {
  // read the pushbutton input pin:
  buttonState = digitalRead(buttonPin);
  buttonState2 = digitalRead(buttonPin2);
  
  int analogButton0 = analogRead(A0);
  int analogButton1 = analogRead(A1);
  
  if (analogButton0 >= 500)
  {
    buttonState = HIGH;
  }
  else if (analogButton0 < 500)
  {
    buttonState = LOW;
  }
  
  if (analogButton1 >= 500)
  {
    buttonState2 = HIGH;
  }
  else if (analogButton1 < 500)
  {
    buttonState2 = LOW;
  }
  
  // compare the buttonState to its previous state
  if ((buttonState != lastButtonState)||(buttonState2 != lastButtonState2)) 
  {
    // if the state has changed, increment the counter
    if (buttonState == HIGH) 
    {
      // if the current state is HIGH then the button went from off to on:
      Serial.print("J");
    } 
    else if (buttonState2 == HIGH) 
    {
      // if the current state is HIGH then the button went from off to on:
        Serial.print("D");
    
    } 
    else if(buttonState2 == LOW && lastButtonState2 == HIGH) 
    {
      // if the current state is LOW then the button went from on to off:
    // Delay a little bit to avoid bouncing
        Serial.print("d");
    }
    else if(buttonState == LOW && lastButtonState == HIGH) 
    {
      // if the current state is LOW then the button went from on to off:
    // Delay a little bit to avoid bouncing
        Serial.print("j");
    }
      
  }
  delay(100);
  // save the current state as the last state, for next time through the loop
  lastButtonState = buttonState;
  lastButtonState2 = buttonState2;
}
